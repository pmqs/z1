name: Cygwin

# Set to manual execution only for now.
on:
  workflow_dispatch:
  # push:
  # pull_request:

defaults:
  run:
    # shell: C:\tools\cygwin\bin\bash.exe --login -o igncr '{0}'
    shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'

jobs:
  configure:

    name: Cygwin + ${{ matrix.compiler }}
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        compiler:
          - gcc
        #   - clang

    steps:

    - name: Set up Cygwin
      uses: egor-tensin/setup-cygwin@v4
      with:
        # install-dir:$GITHUB_WORKSPACE ${{ github.workspace }}
        packages: make gcc-g++ clang dos2unix

    # - name: Install Cygwin
    #   uses: cygwin/cygwin-install-action@master
    # #   with:


    # - name: setup git to use line-feed for EOL
    #   run: |
    #     git config --global core.eol lf

    - name: Display ${{ matrix.compiler }} version
      run: ${{ matrix.compiler }} -v

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        show-progress: 'false'
        # temp hard-code to build branch
        ref: build
        # path: ???  get it un unpack into the cygwin home dir

    # - name: setup git to use line-feed for EOL
    #   run: |
    #     cd $GITHUB_WORKSPACE
    #     dos2unix unix/*

    - name: configure (unix/Makefile)
      run: |
        pwd
        ls -l
        cd $GITHUB_WORKSPACE
        pwd
        make -f unix/Makefile flags CC=${{ matrix.compiler }} LOCAL_ZIP="-Werror"
        cat flags

    - name: build (unix/Makefile)
      run: |
        cd $GITHUB_WORKSPACE
        make -f unix/Makefile generic
        ls -l zip

    - name: Run zip --help
      run: |
        cd $GITHUB_WORKSPACE
        ./zip --help

    - name: Run zip -v
      run: |
        cd $GITHUB_WORKSPACE
        ./zip -v

    - name: Run zipcloak --help
      run: |
        cd $GITHUB_WORKSPACE
        ./zipcloak --help

    - name: Run zipcloak -v
      run: |
        cd $GITHUB_WORKSPACE
        ./zipcloak -v

    - name: Run zipnote --help
      run: |
        cd $GITHUB_WORKSPACE
        ./zipnote --help

    - name: Run zipnote -v
      run: |
        cd $GITHUB_WORKSPACE
        ./zipnote -v

    - name: Run zipsplit --help
      run: |
        cd $GITHUB_WORKSPACE
        ./zipsplit --help

    - name: Run zipsplit -v
      run: |
        cd $GITHUB_WORKSPACE
        ./zipsplit -v

    - name: pwd
      run: |
        pwd
        cd $GITHUB_WORKSPACE
        pwd
        echo xxx ${{ github.workspace }}


    # - name: pwd
    #   run: |
    #     pwd
    #     cd $GITHUB_WORKSPACE
    #     pwd
    #   working-directory: ${{ env.GITHUB_WORKSPACE }}

    # - name: Upload build errors
    #   uses: actions/upload-artifact@v3
    #   if: failure()
    #   with:
    #     name: ${{ matrix.name }} (configure)
    #     path: |
    #       **/Makefile
    #       ${{ matrix.build-dir || '.' }}/configure.log
    #     retention-days: 30