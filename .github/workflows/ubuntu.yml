name: Ubuntu

# Set to manual execution only for now.
on:
  workflow_dispatch:
  # push:
  # pull_request:

jobs:
  configure:
    name: ubuntu-${{ matrix.osver }} + ${{ matrix.compiler }}
    runs-on: ubuntu-${{ matrix.osver }}
    strategy:
      fail-fast: false
      matrix:
        include:

        - osver: 22.04
          compiler: gcc-13
          lunar: true
        - osver: 22.04
          compiler: gcc-12
          lunar: true
        - osver: 22.04
          compiler: gcc-11
        - osver: 22.04
          compiler: gcc-10
        - osver: 20.04
          compiler: gcc-9
        - osver: 20.04
          compiler: gcc-8
        - osver: 20.04
          compiler: gcc-7
        # - osver: 20.04
        #   compiler: gcc-6
        - osver: 20.04
          compiler: gcc-5
          trusty: true
        # - osver: 20.04
        #   compiler: gcc-4

        - osver: 22.04
          compiler: clang-17
        - osver: 22.04
          compiler: clang-16
          lunar: true
        - osver: 22.04
          compiler: clang-15
          lunar: true
        - osver: 22.04
          compiler: clang-14
        - osver: 22.04
          compiler: clang-13
        - osver: 22.04
          compiler: clang-12
        - osver: 22.04
          compiler: clang-11
        - osver: 20.04
          compiler: clang-10
        - osver: 20.04
          compiler: clang-9
        - osver: 20.04
          compiler: clang-8
        - osver: 20.04
          compiler: clang-7
          # xenial: true

        # - osver: 20.04
        #   compiler: clang-6
        # - osver: 20.04
        #   compiler: clang-5
        # - osver: 20.04
        #   compiler: clang-4

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        show-progress: 'false'

      # https://askubuntu.com/a/1313032
      # https://help.ubuntu.com/community/Repositories/CommandLine
    # - name: Update Package Repository for 20.04
    #   if: matrix.xenial
    #   run: |
    #     sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu xenial main"
    #     sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu xenial universe"

    # - name: Update Package Repository for 20.04
    #   if: matrix.trusty
    #   run: |
    #     sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu trusty main"
    #     sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu trusty universe"

    - name: Update Package Repository for 22.04
      # if: matrix.osver == '22.04' && matrix.compiler != 'clang-17'
      if: matrix.lunar
      run: |
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu lunar main"
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu lunar universe"

      # https://apt.llvm.org/
    - name: Update Package Repository for 22.04 + clang=17
      if:  matrix.compiler == 'clang-17'
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod u+x llvm.sh
        echo | sudo ./llvm.sh 17


    - name: Install packages
      run: |
        sudo apt-get update -qq
        sudo apt-get install -yq ${{ matrix.compiler }}

    - name: Display ${{ matrix.compiler }} version
      run: ${{ matrix.compiler }} -v

    # - name: configure (unix/Makefile)
    #   run: |
    #     make -f unix/Makefile flags CC=${{ matrix.compiler }} LOCAL_ZIP="-Werror -DNO_ASM" ${{ matrix.opts }}
    #     cat flags

    # - name: build (unix/Makefile)
    #   run: |
    #         make -f unix/Makefile generic

    # - name: Run zip -v
    #   run: ./zip -v

    # - name: Run zipcloak -v
    #   run: ./zipcloak -v

    # - name: Run zipnote -v
    #   run: ./zipnote -v

    # - name: Run zipsplit -v
    #   run: ./zipsplit -v

