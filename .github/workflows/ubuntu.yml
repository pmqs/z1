name: Ubuntu

# Set to manual execution only for now.
on:
  workflow_dispatch:
  # push:
  # pull_request:

jobs:
  configure:
    name: ubuntu-${{ matrix.osver }} + ${{ matrix.compiler }}
    runs-on: ubuntu-${{ matrix.osver }}
    strategy:
      fail-fast: false
      matrix:
        include:

          # GCC Compilers
        # - compiler: gcc-13
        #   osver: 22.04
        #   lunar: true

        # - compiler: gcc-12
        #   osver: 22.04
        #   lunar: true

        # - compiler: gcc-11
        #   osver: 22.04

        # - compiler: gcc-10
        #   osver: 22.04

        # - compiler: gcc-9
        #   osver: 20.04

        # - compiler: gcc-8
        #   osver: 20.04

        # - compiler: gcc-7
        #   osver: 20.04

        # - compiler: gcc-6
        #   osver: 20.04
        #   bionic: true

        # - compiler: gcc-5
        #   osver: 20.04
        #   bionic: true

        # - compiler: gcc-4.7
        #   osver: 20.04
        #   bionic: true

        #   # CLANG Compilers

        # - compiler: clang-17
        #   osver: 22.04

        # - compiler: clang-16
        #   osver: 22.04
        #   lunar: true

        # - compiler: clang-15
        #   osver: 22.04
        #   lunar: true

        # - compiler: clang-14
        #   osver: 22.04

        # - compiler: clang-13
        #   osver: 22.04

        # - compiler: clang-12
        #   osver: 22.04

        # - compiler: clang-11
        #   osver: 22.04

        # - compiler: clang-10
        #   osver: 20.04

        # - compiler: clang-9
        #   osver: 20.04

        # - compiler: clang-8
        #   osver: 20.04

        # - compiler: clang-7
        #   osver: 20.04


        # # - compiler: clang-6
        # #   sver: 20.04

        # # - compiler: clang-5
        # #   osver: 20.04

        # # - compiler: clang-4
        # #   osver: 20.04

        - compiler: clang-3.3
          osver: 20.04
          trusty: true
          

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        show-progress: 'false'

      # https://askubuntu.com/a/1313032
      # https://help.ubuntu.com/community/Repositories/CommandLine
      #
      # add-apt-repository is slow, so only trigger it when needed
    - name: Update Package Repository for 20.04
      if: matrix.bionic
      run: |
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu bionic main"
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu bionic universe"

    - name: Update Package Repository for 20.04
      if: matrix.xenial
      run: |
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu xenial main"
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu xenial universe"

    - name: Update Package Repository for 20.04
      if: matrix.trusty
      run: |
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu trusty main"
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu trusty universe"

    - name: Update Package Repository for 22.04
      if: matrix.lunar
      run: |
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu lunar main"
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu lunar universe"

      # https://apt.llvm.org/
    - name: Update Package Repository for 22.04 + clang=17
      if:  matrix.compiler == 'clang-17'
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod u+x llvm.sh
        echo | sudo ./llvm.sh 17


    - name: Install packages
      run: |
        sudo apt-get update -qq
        sudo apt-get install -yq ${{ matrix.compiler }}

    - name: Display ${{ matrix.compiler }} version
      run: ${{ matrix.compiler }} -v

    - name: configure (unix/Makefile)
      run: |
        make -j2 -f unix/Makefile generic CC=${{ matrix.compiler }}
        cat flags

    # - name: configure (unix/Makefile)
    #   run: |
    #     make -f unix/Makefile flags CC=${{ matrix.compiler }} LOCAL_ZIP="-Werror -DNO_ASM" ${{ matrix.opts }}
    #     cat flags

    # - name: build (unix/Makefile)
    #   run: |
    #         make -f unix/Makefile generic

    - name: Run zip -v
      run: ./zip -v

    # - name: Run zipcloak -v
    #   run: ./zipcloak -v

    # - name: Run zipnote -v
    #   run: ./zipnote -v

    # - name: Run zipsplit -v
    #   run: ./zipsplit -v

