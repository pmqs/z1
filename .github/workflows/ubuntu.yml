name: Ubuntu

# Set to manual execution only for now.
on:
  workflow_dispatch:
  # push:
  # pull_request:

jobs:
  configure:
    name: ubuntu-${{ matrix.osver }} + ${{ matrix.name }}
    runs-on: ubuntu-${{ matrix.osver }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # - [
          #     [ name: gcc-13, cmd: gcc-13,  package: gcc-13,  osver: 22.04, lunar: true],
          #     [ name: gcc-12, cmd: gcc-12,  package: gcc-12,  osver: 22.04             ],
          #     [ name: gcc-11, cmd: gcc-11,  package: gcc-11,  osver: 22.04             ],
          #     [ name: gcc-10, cmd: gcc-10,  package: gcc-10,  osver: 22.04             ],
          #     [ name: gcc-9,  cmd: gcc-9,   package: gcc-9,   osver: 20.04             ],
          #     [ name: gcc-8,  cmd: gcc-8,   package: gcc-8,   osver: 20.04             ],
          #     [ name: gcc-7,  cmd: gcc-7,   package: gcc-7,   osver: 20.04             ],
          #     [ name: gcc-6,  cmd: gcc-6,   package: gcc-6,   osver: 20.04, bionic: true],
          #     [ name: gcc-5,  cmd: gcc-5,   package: gcc-5,   osver: 20.04, bionic: true],
          #     [ name: gcc-4,  cmd: gcc-4.7, package: gcc-4.7, osver: 20.04, bionic: true],
          #     ]

          # GCC Compilers
        - name: gcc-13
          cmd: gcc-13
          osver: gcc-13
          package: 22.04
          lunar: true

        - name: gcc-12
          cmd: gcc-12
          osver: gcc-12
          package: 22.04
          lunar: true

        - name: gcc-11
          cmd: gcc-11
          package: gcc-11
          osver: 22.04

        - name: gcc-10
          cmd: gcc-10
          package: gcc-10
          osver: 22.04

        - name: gcc-9
          cmd: gcc-9
          package: gcc-9
          osver: 20.04

        - name: gcc-8
          cmd: gcc-8
          package: gcc-8
          osver: 20.04

        - name: gcc-7
          cmd: gcc-7
          package: gcc-7
          osver: 20.04

        - name: gcc-6
          cmd: gcc-6
          package: gcc-6
          osver: 20.04
          bionic: true

        - name: gcc-5
          cmd: gcc-5
          package: gcc-5
          osver: 20.04
          bionic: true

        - name: gcc-4
          cmd: gcc-4.7
          package: gcc-4.7
          osver: 20.04
          bionic: true

          # CLANG Compilers

        - name: clang-17
          cmd: clang-17
          package: clang-17
          osver: 22.04
          lunar: true

        - name: clang-16
          cmd: clang-16
          package: clang-16
          osver: 22.04
          lunar: true

        - name: clang-15
          cmd: clang-15
          package: clang-15
          osver: 22.04
          lunar: true

        - name: clang-14
          cmd: clang-14
          package: clang-14
          osver: 22.04

        - name: clang-13
          cmd: clang-13
          package: clang-13
          osver: 22.04

        - name: clang-12
          cmd: clang-12
          package: clang-12
          osver: 22.04

        - name: clang-11
          cmd: clang-11
          package: clang-11
          osver: 22.04

        - name: clang-10
          cmd: clang-10
          package: clang-10
          osver: 20.04

        - name: clang-9
          cmd: clang-9
          package: clang-9
          osver: 20.04

        - name: clang-8
          cmd: clang-8
          package: clang-8
          osver: 20.04

        - name: clang-7
          cmd: clang-7
          package: clang-7
          osver: 20.04

        - name: clang-6
          cmd: clang-6.0
          package: clang-6.0
          osver: 20.04

        - name: clang-5
          cmd: clang-5.0
          package: clang-5.0
          osver: 20.04
          bionic: true

        - name: clang-4
          cmd: clang-4.0
          package: clang-4.0
          osver: 20.04
          bionic: true

        - name: clang-3
          cmd: clang
          package: clang-3.3
          osver: 20.04
          trusty: true


    steps:

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        show-progress: 'false'

      # https://askubuntu.com/a/1313032
      # https://help.ubuntu.com/community/Repositories/CommandLine
      #
      # add-apt-repository is slow, so only trigger it when needed

    - name: Update Package Repository for 20.04
      if: matrix.trusty
      run: |
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu trusty main"
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu trusty universe"

    # - name: Update Package Repository for 20.04
    #   if: matrix.trusty-updates
    #   run: |
    #     sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu trusty-updates main"
    #     sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu trusty-updates universe"

    # - name: Update Package Repository for 20.04
    #   if: matrix.xenial
    #   run: |
    #     sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu xenial main"
    #     sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu xenial universe"

    # - name: Update Package Repository for 20.04
    #   if: matrix.xenial-updates
    #   run: |
    #     sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu xenial-updates main"
    #     sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu xenial-updates universe"


    - name: Update Package Repository for 20.04
      if: matrix.bionic
      run: |
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu bionic main"
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu bionic universe"

    - name: Update Package Repository for 22.04
      if: matrix.lunar
      run: |
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu lunar main"
        sudo add-apt-repository "deb http://azure.archive.ubuntu.com/ubuntu lunar universe"

      # https://apt.llvm.org/
    - name: Update Package Repository for 22.04 + clang=17
      if:  matrix.name == 'clang-17'
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod u+x llvm.sh
        echo | sudo ./llvm.sh 17


    - name: Install packages
      run: |
        sudo apt-get update -qq
        sudo apt-get install -yq ${{ matrix.package }}

    - name: Display ${{ matrix.name }} version
      run: ${{ matrix.cmd }} -v

    - name: configure (unix/Makefile)
      run: |
        make -j2 -f unix/Makefile generic CC=${{ matrix.cmd }}
        cat flags

    # - name: configure (unix/Makefile)
    #   run: |
    #     make -f unix/Makefile flags CC=${{ matrix.cmd }} LOCAL_ZIP="-Werror -DNO_ASM" ${{ matrix.opts }}
    #     cat flags

    # - name: build (unix/Makefile)
    #   run: |
    #         make -f unix/Makefile generic

    - name: Run zip -v
      run: ./zip -v

    # - name: Run zipcloak -v
    #   run: ./zipcloak -v

    # - name: Run zipnote -v
    #   run: ./zipnote -v

    # - name: Run zipsplit -v
    #   run: ./zipsplit -v

